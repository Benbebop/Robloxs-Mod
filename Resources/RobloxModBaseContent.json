{"0_12398":{"Name":"cl_init","ClassName":"ModuleScript","Parent":"0_12185","Source":"\n--[[---------------------------------------------------------\n\n\tSandbox Gamemode\n\n\tThis is GMod's default gamemode\n\n-----------------------------------------------------------]]\n\ninclude( 'shared.lua' )\ninclude( 'cl_spawnmenu.lua' )\ninclude( 'cl_notice.lua' )\ninclude( 'cl_hints.lua' )\ninclude( 'cl_worldtips.lua' )\ninclude( 'cl_search_models.lua' )\ninclude( 'gui/IconEditor.lua' )\n\n--\n-- Make BaseClass available\n--\nDEFINE_BASECLASS( \"gamemode_base\" )\n\n\nlocal physgun_halo = CreateConVar( \"physgun_halo\", \"1\", { FCVAR_ARCHIVE }, \"Draw the physics gun halo?\" )\n\nfunction GM:Initialize()\n\n\tBaseClass.Initialize( self )\n\nend\n\nfunction GM:LimitHit( name )\n\n\tself:AddNotify( \"#SBoxLimit_\" .. name, NOTIFY_ERROR, 6 )\n\tsurface.PlaySound( \"buttons/button10.wav\" )\n\nend\n\nfunction GM:OnUndo( name, strCustomString )\n\n\tif ( !strCustomString ) then\n\t\tlocal str = \"#Undone_\" .. name\n\t\tlocal translated = language.GetPhrase( str )\n\t\tif ( str == translated ) then\n\t\t\t-- No translation available, apply our own\n\t\t\ttranslated = string.format( language.GetPhrase( \"hint.undoneX\" ), language.GetPhrase( name ) )\n\t\telse\n\t\t\t-- Try to translate some of this\n\t\t\tlocal strmatch = string.match( translated, \"^Undone (.*)$\" )\n\t\t\tif ( strmatch ) then\n\t\t\t\ttranslated = string.format( language.GetPhrase( \"hint.undoneX\" ), language.GetPhrase( strmatch ) )\n\t\t\tend\n\t\tend\n\n\t\tself:AddNotify( translated, NOTIFY_UNDO, 2 )\n\telse\n\t\t-- This is a hack for SWEPs, etc, to support #translations from server\n\t\tlocal str = string.match( strCustomString, \"^Undone (.*)$\" )\n\t\tif ( str ) then\n\t\t\tstrCustomString = string.format( language.GetPhrase( \"hint.undoneX\" ), language.GetPhrase( str ) )\n\t\tend\n\n\t\tself:AddNotify( strCustomString, NOTIFY_UNDO, 2 )\n\tend\n\n\t-- Find a better sound :X\n\tsurface.PlaySound( \"buttons/button15.wav\" )\n\nend\n\nfunction GM:OnCleanup( name )\n\n\tself:AddNotify( \"#Cleaned_\" .. name, NOTIFY_CLEANUP, 5 )\n\n\t-- Find a better sound :X\n\tsurface.PlaySound( \"buttons/button15.wav\" )\n\nend\n\nfunction GM:UnfrozeObjects( num )\n\n\tself:AddNotify( string.format( language.GetPhrase( \"hint.unfrozeX\" ), num ), NOTIFY_GENERIC, 3 )\n\n\t-- Find a better sound :X\n\tsurface.PlaySound( \"npc/roller/mine/rmine_chirp_answer1.wav\" )\n\nend\n\nfunction GM:HUDPaint()\n\n\tself:PaintWorldTips()\n\n\t-- Draw all of the default stuff\n\tBaseClass.HUDPaint( self )\n\n\tself:PaintNotes()\n\nend\n\n--[[---------------------------------------------------------\n\tDraws on top of VGUI..\n-----------------------------------------------------------]]\nfunction GM:PostRenderVGUI()\n\n\tBaseClass.PostRenderVGUI( self )\n\nend\n\nlocal PhysgunHalos = {}\n\n--[[---------------------------------------------------------\n\tName: gamemode:DrawPhysgunBeam()\n\tDesc: Return false to override completely\n-----------------------------------------------------------]]\nfunction GM:DrawPhysgunBeam( ply, weapon, bOn, target, boneid, pos )\n\n\tif ( physgun_halo:GetInt() == 0 ) then return true end\n\n\tif ( IsValid( target ) ) then\n\t\tPhysgunHalos[ ply ] = target\n\tend\n\n\treturn true\n\nend\n\nhook.Add( \"PreDrawHalos\", \"AddPhysgunHalos\", function()\n\n\tif ( !PhysgunHalos || table.IsEmpty( PhysgunHalos ) ) then return end\n\n\tfor k, v in pairs( PhysgunHalos ) do\n\n\t\tif ( !IsValid( k ) ) then continue end\n\n\t\tlocal size = math.random( 1, 2 )\n\t\tlocal colr = k:GetWeaponColor() + VectorRand() * 0.3\n\n\t\thalo.Add( PhysgunHalos, Color( colr.x * 255, colr.y * 255, colr.z * 255 ), size, size, 1, true, false )\n\n\tend\n\n\tPhysgunHalos = {}\n\nend )\n\n\n--[[---------------------------------------------------------\n\tName: gamemode:NetworkEntityCreated()\n\tDesc: Entity is created over the network\n-----------------------------------------------------------]]\nfunction GM:NetworkEntityCreated( ent )\n\n\t--\n\t-- If the entity wants to use a spawn effect\n\t-- then create a propspawn effect if the entity was\n\t-- created within the last second (this function gets called\n\t-- on every entity when joining a server)\n\t--\n\n\tif ( ent:GetSpawnEffect() && ent:GetCreationTime() > ( CurTime() - 1.0 ) ) then\n\n\t\tlocal ed = EffectData()\n\t\ted:SetOrigin( ent:GetPos() )\n\t\ted:SetEntity( ent )\n\t\tutil.Effect( \"propspawn\", ed, true, true )\n\n\tend\n\nend\n"},"0_12187":{"Parent":"0_12185","ClassName":"Folder","Name":"player_class"},"0_12195":{"Parent":"0_12189","ClassName":"Folder","Name":"effects"},"0_12407":{"Name":"cl_spawnmenu","ClassName":"ModuleScript","Parent":"0_12213","Source":"\ninclude( \"spawnmenu/spawnmenu.lua\" )\n\n--[[---------------------------------------------------------\n\tIf false is returned then the spawn menu is never created.\n\tThis saves load times if your mod doesn't actually use the\n\tspawn menu for any reason.\n-----------------------------------------------------------]]\nfunction GM:SpawnMenuEnabled()\n\treturn true\nend\n\n--[[---------------------------------------------------------\n\tCalled when spawnmenu is trying to be opened.\n\tReturn false to dissallow it.\n-----------------------------------------------------------]]\nfunction GM:SpawnMenuOpen()\n\treturn true\nend\n\nfunction GM:SpawnMenuOpened()\n\tself:SuppressHint( \"OpeningMenu\" )\n\tself:AddHint( \"OpeningContext\", 20 )\n\tself:AddHint( \"EditingSpawnlists\", 5 )\nend\n\nfunction GM:SpawnMenuClosed()\nend\n\nfunction GM:SpawnMenuCreated(spawnmenu)\nend\n\n--[[---------------------------------------------------------\n\tIf false is returned then the context menu is never created.\n\tThis saves load times if your mod doesn't actually use the\n\tcontext menu for any reason.\n-----------------------------------------------------------]]\nfunction GM:ContextMenuEnabled()\n\treturn true\nend\n\n--[[---------------------------------------------------------\n\tCalled when context menu is trying to be opened.\n\tReturn false to dissallow it.\n-----------------------------------------------------------]]\nfunction GM:ContextMenuOpen()\n\treturn true\nend\n\nfunction GM:ContextMenuOpened()\n\tself:SuppressHint( \"OpeningContext\" )\n\tself:AddHint( \"ContextClick\", 20 )\nend\n\nfunction GM:ContextMenuClosed()\nend\n\nfunction GM:ContextMenuCreated()\nend\n\n--[[---------------------------------------------------------\n\tBackwards compatibility. Do Not Use!!!\n-----------------------------------------------------------]]\nfunction GM:GetSpawnmenuTools( name )\n\treturn spawnmenu.GetToolMenu( name )\nend\n\n--[[---------------------------------------------------------\n\tBackwards compatibility. Do Not Use!!!\n-----------------------------------------------------------]]\nfunction GM:AddSTOOL( category, itemname, text, command, controls, cpanelfunction )\n\tself:AddToolmenuOption( \"Main\", category, itemname, text, command, controls, cpanelfunction )\nend\n\nfunction GM:PreReloadToolsMenu()\nend\n\n--[[---------------------------------------------------------\n\tDon't hook or override this function.\n\tHook AddToolMenuTabs instead!\n-----------------------------------------------------------]]\nfunction GM:AddGamemodeToolMenuTabs()\n\n\t-- This is named like this to force it to be the first tab\n\tspawnmenu.AddToolTab( \"Main\",\t\t\"#spawnmenu.tools_tab\", \"icon16/wrench.png\" )\n\tspawnmenu.AddToolTab( \"Utilities\",\t\"#spawnmenu.utilities_tab\", \"icon16/page_white_wrench.png\" )\n\nend\n\n--[[---------------------------------------------------------\n\tAdd your custom tabs here.\n-----------------------------------------------------------]]\nfunction GM:AddToolMenuTabs()\n\n\t-- Hook me!\n\nend\n\n--[[---------------------------------------------------------\n\tAdd categories to your tabs\n-----------------------------------------------------------]]\nfunction GM:AddGamemodeToolMenuCategories()\n\n\tspawnmenu.AddToolCategory( \"Main\", \"Constraints\",\t\"#spawnmenu.tools.constraints\" )\n\tspawnmenu.AddToolCategory( \"Main\", \"Construction\",\t\"#spawnmenu.tools.construction\" )\n\tspawnmenu.AddToolCategory( \"Main\", \"Poser\",\t\t\t\"#spawnmenu.tools.posing\" )\n\tspawnmenu.AddToolCategory( \"Main\", \"Render\",\t\t\"#spawnmenu.tools.render\" )\n\nend\n\n--[[---------------------------------------------------------\n\tAdd categories to your tabs\n-----------------------------------------------------------]]\nfunction GM:AddToolMenuCategories()\n\n\t-- Hook this function to add custom stuff\n\nend\n\nfunction GM:PopulateToolMenu()\nend\n\nfunction GM:PostReloadToolsMenu()\nend\n\n--[[---------------------------------------------------------\n\tAdd categories to your tabs\n-----------------------------------------------------------]]\nfunction GM:PopulatePropMenu()\n\n\t-- This function makes the engine load the spawn menu text files.\n\t-- We call it here so that any gamemodes not using the default\n\t-- spawn menu can totally not call it.\n\tspawnmenu.PopulateFromEngineTextFiles()\n\nend\n"},"0_12404":{"Name":"cl_init","ClassName":"ModuleScript","Parent":"0_12213","Source":"\n--[[---------------------------------------------------------\n\n\tSandbox Gamemode\n\n\tThis is GMod's default gamemode\n\n-----------------------------------------------------------]]\n\ninclude( 'shared.lua' )\ninclude( 'cl_spawnmenu.lua' )\ninclude( 'cl_notice.lua' )\ninclude( 'cl_hints.lua' )\ninclude( 'cl_worldtips.lua' )\ninclude( 'cl_search_models.lua' )\ninclude( 'gui/IconEditor.lua' )\n\n--\n-- Make BaseClass available\n--\nDEFINE_BASECLASS( \"gamemode_base\" )\n\n\nlocal physgun_halo = CreateConVar( \"physgun_halo\", \"1\", { FCVAR_ARCHIVE }, \"Draw the physics gun halo?\" )\n\nfunction GM:Initialize()\n\n\tBaseClass.Initialize( self )\n\nend\n\nfunction GM:LimitHit( name )\n\n\tself:AddNotify( \"#SBoxLimit_\" .. name, NOTIFY_ERROR, 6 )\n\tsurface.PlaySound( \"buttons/button10.wav\" )\n\nend\n\nfunction GM:OnUndo( name, strCustomString )\n\n\tif ( !strCustomString ) then\n\t\tlocal str = \"#Undone_\" .. name\n\t\tlocal translated = language.GetPhrase( str )\n\t\tif ( str == translated ) then\n\t\t\t-- No translation available, apply our own\n\t\t\ttranslated = string.format( language.GetPhrase( \"hint.undoneX\" ), language.GetPhrase( name ) )\n\t\telse\n\t\t\t-- Try to translate some of this\n\t\t\tlocal strmatch = string.match( translated, \"^Undone (.*)$\" )\n\t\t\tif ( strmatch ) then\n\t\t\t\ttranslated = string.format( language.GetPhrase( \"hint.undoneX\" ), language.GetPhrase( strmatch ) )\n\t\t\tend\n\t\tend\n\n\t\tself:AddNotify( translated, NOTIFY_UNDO, 2 )\n\telse\n\t\t-- This is a hack for SWEPs, etc, to support #translations from server\n\t\tlocal str = string.match( strCustomString, \"^Undone (.*)$\" )\n\t\tif ( str ) then\n\t\t\tstrCustomString = string.format( language.GetPhrase( \"hint.undoneX\" ), language.GetPhrase( str ) )\n\t\tend\n\n\t\tself:AddNotify( strCustomString, NOTIFY_UNDO, 2 )\n\tend\n\n\t-- Find a better sound :X\n\tsurface.PlaySound( \"buttons/button15.wav\" )\n\nend\n\nfunction GM:OnCleanup( name )\n\n\tself:AddNotify( \"#Cleaned_\" .. name, NOTIFY_CLEANUP, 5 )\n\n\t-- Find a better sound :X\n\tsurface.PlaySound( \"buttons/button15.wav\" )\n\nend\n\nfunction GM:UnfrozeObjects( num )\n\n\tself:AddNotify( string.format( language.GetPhrase( \"hint.unfrozeX\" ), num ), NOTIFY_GENERIC, 3 )\n\n\t-- Find a better sound :X\n\tsurface.PlaySound( \"npc/roller/mine/rmine_chirp_answer1.wav\" )\n\nend\n\nfunction GM:HUDPaint()\n\n\tself:PaintWorldTips()\n\n\t-- Draw all of the default stuff\n\tBaseClass.HUDPaint( self )\n\n\tself:PaintNotes()\n\nend\n\n--[[---------------------------------------------------------\n\tDraws on top of VGUI..\n-----------------------------------------------------------]]\nfunction GM:PostRenderVGUI()\n\n\tBaseClass.PostRenderVGUI( self )\n\nend\n\nlocal PhysgunHalos = {}\n\n--[[---------------------------------------------------------\n\tName: gamemode:DrawPhysgunBeam()\n\tDesc: Return false to override completely\n-----------------------------------------------------------]]\nfunction GM:DrawPhysgunBeam( ply, weapon, bOn, target, boneid, pos )\n\n\tif ( physgun_halo:GetInt() == 0 ) then return true end\n\n\tif ( IsValid( target ) ) then\n\t\tPhysgunHalos[ ply ] = target\n\tend\n\n\treturn true\n\nend\n\nhook.Add( \"PreDrawHalos\", \"AddPhysgunHalos\", function()\n\n\tif ( !PhysgunHalos || table.IsEmpty( PhysgunHalos ) ) then return end\n\n\tfor k, v in pairs( PhysgunHalos ) do\n\n\t\tif ( !IsValid( k ) ) then continue end\n\n\t\tlocal size = math.random( 1, 2 )\n\t\tlocal colr = k:GetWeaponColor() + VectorRand() * 0.3\n\n\t\thalo.Add( PhysgunHalos, Color( colr.x * 255, colr.y * 255, colr.z * 255 ), size, size, 1, true, false )\n\n\tend\n\n\tPhysgunHalos = {}\n\nend )\n\n\n--[[---------------------------------------------------------\n\tName: gamemode:NetworkEntityCreated()\n\tDesc: Entity is created over the network\n-----------------------------------------------------------]]\nfunction GM:NetworkEntityCreated( ent )\n\n\t--\n\t-- If the entity wants to use a spawn effect\n\t-- then create a propspawn effect if the entity was\n\t-- created within the last second (this function gets called\n\t-- on every entity when joining a server)\n\t--\n\n\tif ( ent:GetSpawnEffect() && ent:GetCreationTime() > ( CurTime() - 1.0 ) ) then\n\n\t\tlocal ed = EffectData()\n\t\ted:SetOrigin( ent:GetPos() )\n\t\ted:SetEntity( ent )\n\t\tutil.Effect( \"propspawn\", ed, true, true )\n\n\tend\n\nend\n"},"0_12201":{"Parent":"0_12200","ClassName":"Folder","Name":"stools"},"0_12478":{"Source":"--[[---------------------------------------------------------\n\n  Sandbox Gamemode\n\n  This is GMod's default gamemode\n\n-----------------------------------------------------------]]\n\n-- These files get sent to the client\n\nrequire(script.Parent.cl_hints)\nrequire(script.Parent.cl_init)\nrequire(script.Parent.cl_notice)\nrequire(script.Parent.cl_search_models)\nrequire(script.Parent.cl_spawnmenu)\nrequire(script.Parent.cl_worldtips)\nrequire(script.Parent.persistence)\nrequire(script.Parent.player_extension)\nrequire(script.Parent.save_load)\nrequire(script.Parent.shared)\nrequire(script.Parent.gui.IconEditor)\n\nrequire(script.Parent.shared)\nrequire(script.Parent.commands)\nrequire(script.Parent.player)\nrequire(script.Parent.spawnmenu.init)\n\n--\n-- Make BaseClass available\n--\nDEFINE_BASECLASS( \"gamemode_base\" )\n\n--[[---------------------------------------------------------\n\tName: gamemode:PlayerSpawn()\n\tDesc: Called when a player spawns\n-----------------------------------------------------------]]\nfunction GM:PlayerSpawn( pl, transiton )\n\n\tplayer_manager.SetPlayerClass( pl, \"player_sandbox\" )\n\n\tBaseClass.PlayerSpawn( self, pl, transiton )\n\nend\n\n--[[---------------------------------------------------------\n\tName: gamemode:OnPhysgunFreeze( weapon, phys, ent, player )\n\tDesc: The physgun wants to freeze a prop\n-----------------------------------------------------------]]\nfunction GM:OnPhysgunFreeze( weapon, phys, ent, ply )\n\n\t-- Don't freeze persistent props (should already be froze)\n\tif ( ent:GetPersistent() ) then return false end\n\n\tBaseClass.OnPhysgunFreeze( self, weapon, phys, ent, ply )\n\n\tply:SendHint( \"PhysgunUnfreeze\", 0.3 )\n\tply:SuppressHint( \"PhysgunFreeze\" )\n\nend\n\n--[[---------------------------------------------------------\n\tName: gamemode:OnPhysgunReload( weapon, player )\n\tDesc: The physgun wants to unfreeze\n-----------------------------------------------------------]]\nfunction GM:OnPhysgunReload( weapon, ply )\n\n\tlocal num = ply:PhysgunUnfreeze()\n\n\tif ( num > 0 ) then\n\t\tply:SendLua( \"GAMEMODE:UnfrozeObjects(\" .. num .. \")\" )\n\tend\n\n\tply:SuppressHint( \"PhysgunUnfreeze\" )\n\nend\n\n--[[---------------------------------------------------------\n\tName: gamemode:PlayerShouldTakeDamage\n\tReturn true if this player should take damage from this attacker\n\tNote: This is a shared function - the client will think they can\n\t\tdamage the players even though they can't. This just means the\n\t\tprediction will show blood.\n-----------------------------------------------------------]]\nfunction GM:PlayerShouldTakeDamage( ply, attacker )\n\n\t-- Global godmode, players can't be damaged in any way\n\tif ( cvars.Bool( \"sbox_godmode\", false ) ) then return false end\n\n\t-- No player vs player damage\n\tif ( attacker:IsValid() && attacker:IsPlayer() && ply != attacker ) then\n\t\treturn cvars.Bool( \"sbox_playershurtplayers\", true )\n\tend\n\n\t-- Default, let the player be hurt\n\treturn true\n\nend\n\n--[[---------------------------------------------------------\n\tShow the search when f1 is pressed\n-----------------------------------------------------------]]\nfunction GM:ShowHelp( ply )\n\n\tply:SendLua( \"hook.Run( 'StartSearch' )\" )\n\nend\n\n--[[---------------------------------------------------------\n\tCalled once on the player's first spawn\n-----------------------------------------------------------]]\nfunction GM:PlayerInitialSpawn( ply, transiton )\n\n\tBaseClass.PlayerInitialSpawn( self, ply, transiton )\n\nend\n\n--[[---------------------------------------------------------\n\tA ragdoll of an entity has been created\n-----------------------------------------------------------]]\nfunction GM:CreateEntityRagdoll( entity, ragdoll )\n\n\t-- Replace the entity with the ragdoll in cleanups etc\n\tundo.ReplaceEntity( entity, ragdoll )\n\tcleanup.ReplaceEntity( entity, ragdoll )\n\nend\n\n--[[---------------------------------------------------------\n\tPlayer unfroze an object\n-----------------------------------------------------------]]\nfunction GM:PlayerUnfrozeObject( ply, entity, physobject )\n\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( physobject:GetPos() )\n\teffectdata:SetEntity( entity )\n\tutil.Effect( \"phys_unfreeze\", effectdata, true, true )\n\nend\n\n--[[---------------------------------------------------------\n\tPlayer froze an object\n-----------------------------------------------------------]]\nfunction GM:PlayerFrozeObject( ply, entity, physobject )\n\n\tif ( DisablePropCreateEffect ) then return end\n\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( physobject:GetPos() )\n\teffectdata:SetEntity( entity )\n\tutil.Effect( \"phys_freeze\", effectdata, true, true )\n\nend\n\n--\n-- Who can edit variables?\n-- If you're writing prop protection or something, you'll\n-- probably want to hook or override this function.\n--\nfunction GM:CanEditVariable( ent, ply, key, val, editor )\n\n\t-- Only allow admins to edit admin only variables!\n\tif ( editor.AdminOnly ) then\n\t\treturn ply:IsAdmin()\n\tend\n\n\t-- This entity decides who can edit its variables\n\tif ( isfunction( ent.CanEditVariables ) ) then\n\t\treturn ent:CanEditVariables( ply )\n\tend\n\n\t-- default in sandbox is.. anyone can edit anything.\n\treturn true\n\nend\n","Name":"init","ClassName":"Script","Parent":"0_12185"},"0_12522":{"Parent":"0_12196","ClassName":"StringValue","Name":"logo"},"0_12402":{"Name":"cl_worldtips","ClassName":"ModuleScript","Parent":"0_12185","Source":"\n\nsurface.CreateFont( \"GModWorldtip\",\n\t{\n\t\tfont\t\t= \"Helvetica\",\n\t\tsize\t\t= 20,\n\t\tweight\t\t= 700\n\t})\n\nlocal cl_drawworldtooltips = CreateConVar( \"cl_drawworldtooltips\", \"1\", { FCVAR_ARCHIVE } )\nlocal WorldTip = nil\n\nlocal TipColor = Color( 250, 250, 200, 255 )\n\n--\n-- Adds a hint to the queue\n--\nfunction AddWorldTip( unused1, text, unused2, pos, ent )\n\n\tWorldTip = {}\n\n\tWorldTip.dietime \t= SysTime() + 0.05\n\tWorldTip.text \t\t= text\n\tWorldTip.pos \t\t= pos\n\tWorldTip.ent \t\t= ent\n\nend\n\n\nlocal function DrawWorldTip( tip )\n\n\tif ( IsValid( tip.ent ) ) then\t\n\t\ttip.pos = tip.ent:GetPos()\n\tend\n\n\tlocal pos = tip.pos:ToScreen()\n\n\tlocal black = Color( 0, 0, 0, 255 )\n\tlocal tipcol = Color( TipColor.r, TipColor.g, TipColor.b, 255 )\n\n\tlocal x = 0\n\tlocal y = 0\n\tlocal padding = 10\n\tlocal offset = 50\n\n\tsurface.SetFont( \"GModWorldtip\" )\n\tlocal w, h = surface.GetTextSize( tip.text )\n\n\tx = pos.x - w \n\ty = pos.y - h \n\n\tx = x - offset\n\ty = y - offset\n\n\tdraw.RoundedBox( 8, x-padding-2, y-padding-2, w+padding*2+4, h+padding*2+4, black )\n\n\n\tlocal verts = {}\n\tverts[1] = { x=x+w/1.5-2, y=y+h+2 }\n\tverts[2] = { x=x+w+2, y=y+h/2-1 }\n\tverts[3] = { x=pos.x-offset/2+2, y=pos.y-offset/2+2 }\n\n\tdraw.NoTexture()\n\tsurface.SetDrawColor( 0, 0, 0, tipcol.a )\n\tsurface.DrawPoly( verts )\n\n\n\tdraw.RoundedBox( 8, x-padding, y-padding, w+padding*2, h+padding*2, tipcol )\n\n\tlocal verts = {}\n\tverts[1] = { x=x+w/1.5, y=y+h }\n\tverts[2] = { x=x+w, y=y+h/2 }\n\tverts[3] = { x=pos.x-offset/2, y=pos.y-offset/2 }\n\n\tdraw.NoTexture()\n\tsurface.SetDrawColor( tipcol.r, tipcol.g, tipcol.b, tipcol.a )\n\tsurface.DrawPoly( verts )\n\n\n\tdraw.DrawText( tip.text, \"GModWorldtip\", x + w/2, y, black, TEXT_ALIGN_CENTER )\n\nend\n\n\nfunction GM:PaintWorldTips()\n\n\tif ( !cl_drawworldtooltips:GetBool() ) then return end\n\n\tif ( WorldTip && WorldTip.dietime > SysTime() ) then\n\t\tDrawWorldTip( WorldTip )\t\t\n\tend\n\nend\n"},"0_12521":{"Parent":"0_12184","ClassName":"StringValue","Name":"icon"},"0_12481":{"Source":"--[[---------------------------------------------------------\n\n  Sandbox Gamemode\n\n  This is GMod's default gamemode\n\n-----------------------------------------------------------]]\n\n-- These files get sent to the client\n\nrequire(script.Parent.cl_hints)\nrequire(script.Parent.cl_init)\nrequire(script.Parent.cl_notice)\nrequire(script.Parent.cl_search_models)\nrequire(script.Parent.cl_spawnmenu)\nrequire(script.Parent.cl_worldtips)\nrequire(script.Parent.persistence)\nrequire(script.Parent.player_extension)\nrequire(script.Parent.save_load)\nrequire(script.Parent.shared)\nrequire(script.Parent.gui.IconEditor)\n\nrequire(script.Parent.shared)\nrequire(script.Parent.commands)\nrequire(script.Parent.player)\nrequire(script.Parent.spawnmenu.init)\n\n--\n-- Make BaseClass available\n--\nDEFINE_BASECLASS( \"gamemode_base\" )\n\n--[[---------------------------------------------------------\n\tName: gamemode:PlayerSpawn()\n\tDesc: Called when a player spawns\n-----------------------------------------------------------]]\nfunction GM:PlayerSpawn( pl, transiton )\n\n\tplayer_manager.SetPlayerClass( pl, \"player_sandbox\" )\n\n\tBaseClass.PlayerSpawn( self, pl, transiton )\n\nend\n\n--[[---------------------------------------------------------\n\tName: gamemode:OnPhysgunFreeze( weapon, phys, ent, player )\n\tDesc: The physgun wants to freeze a prop\n-----------------------------------------------------------]]\nfunction GM:OnPhysgunFreeze( weapon, phys, ent, ply )\n\n\t-- Don't freeze persistent props (should already be froze)\n\tif ( ent:GetPersistent() ) then return false end\n\n\tBaseClass.OnPhysgunFreeze( self, weapon, phys, ent, ply )\n\n\tply:SendHint( \"PhysgunUnfreeze\", 0.3 )\n\tply:SuppressHint( \"PhysgunFreeze\" )\n\nend\n\n--[[---------------------------------------------------------\n\tName: gamemode:OnPhysgunReload( weapon, player )\n\tDesc: The physgun wants to unfreeze\n-----------------------------------------------------------]]\nfunction GM:OnPhysgunReload( weapon, ply )\n\n\tlocal num = ply:PhysgunUnfreeze()\n\n\tif ( num > 0 ) then\n\t\tply:SendLua( \"GAMEMODE:UnfrozeObjects(\" .. num .. \")\" )\n\tend\n\n\tply:SuppressHint( \"PhysgunUnfreeze\" )\n\nend\n\n--[[---------------------------------------------------------\n\tName: gamemode:PlayerShouldTakeDamage\n\tReturn true if this player should take damage from this attacker\n\tNote: This is a shared function - the client will think they can\n\t\tdamage the players even though they can't. This just means the\n\t\tprediction will show blood.\n-----------------------------------------------------------]]\nfunction GM:PlayerShouldTakeDamage( ply, attacker )\n\n\t-- Global godmode, players can't be damaged in any way\n\tif ( cvars.Bool( \"sbox_godmode\", false ) ) then return false end\n\n\t-- No player vs player damage\n\tif ( attacker:IsValid() && attacker:IsPlayer() && ply != attacker ) then\n\t\treturn cvars.Bool( \"sbox_playershurtplayers\", true )\n\tend\n\n\t-- Default, let the player be hurt\n\treturn true\n\nend\n\n--[[---------------------------------------------------------\n\tShow the search when f1 is pressed\n-----------------------------------------------------------]]\nfunction GM:ShowHelp( ply )\n\n\tply:SendLua( \"hook.Run( 'StartSearch' )\" )\n\nend\n\n--[[---------------------------------------------------------\n\tCalled once on the player's first spawn\n-----------------------------------------------------------]]\nfunction GM:PlayerInitialSpawn( ply, transiton )\n\n\tBaseClass.PlayerInitialSpawn( self, ply, transiton )\n\nend\n\n--[[---------------------------------------------------------\n\tA ragdoll of an entity has been created\n-----------------------------------------------------------]]\nfunction GM:CreateEntityRagdoll( entity, ragdoll )\n\n\t-- Replace the entity with the ragdoll in cleanups etc\n\tundo.ReplaceEntity( entity, ragdoll )\n\tcleanup.ReplaceEntity( entity, ragdoll )\n\nend\n\n--[[---------------------------------------------------------\n\tPlayer unfroze an object\n-----------------------------------------------------------]]\nfunction GM:PlayerUnfrozeObject( ply, entity, physobject )\n\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( physobject:GetPos() )\n\teffectdata:SetEntity( entity )\n\tutil.Effect( \"phys_unfreeze\", effectdata, true, true )\n\nend\n\n--[[---------------------------------------------------------\n\tPlayer froze an object\n-----------------------------------------------------------]]\nfunction GM:PlayerFrozeObject( ply, entity, physobject )\n\n\tif ( DisablePropCreateEffect ) then return end\n\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( physobject:GetPos() )\n\teffectdata:SetEntity( entity )\n\tutil.Effect( \"phys_freeze\", effectdata, true, true )\n\nend\n\n--\n-- Who can edit variables?\n-- If you're writing prop protection or something, you'll\n-- probably want to hook or override this function.\n--\nfunction GM:CanEditVariable( ent, ply, key, val, editor )\n\n\t-- Only allow admins to edit admin only variables!\n\tif ( editor.AdminOnly ) then\n\t\treturn ply:IsAdmin()\n\tend\n\n\t-- This entity decides who can edit its variables\n\tif ( isfunction( ent.CanEditVariables ) ) then\n\t\treturn ent:CanEditVariables( ply )\n\tend\n\n\t-- default in sandbox is.. anyone can edit anything.\n\treturn true\n\nend\n","Name":"init","ClassName":"Script","Parent":"0_12213"},"0_12513":{"MoonAngularSize":0,"SunAngularSize":4,"SkyboxDn":"rbxassetid://6188155007","SkyboxLf":"rbxassetid://6188155007","ClassName":"Sky","Parent":"0_12229","SkyboxRt":"rbxassetid://6188155007","SkyboxBk":"rbxassetid://6188155007","SkyboxFt":"rbxassetid://6188155007","SkyboxUp":"rbxassetid://6188164614"},"0_12184":{"Parent":"0_12183","ClassName":"Folder","Name":"sandbox"},"0_12223":{"Parent":"0_12217","ClassName":"Folder","Name":"effects"},"0_12224":{"Parent":"0_12182","ClassName":"Folder","Name":"maps"},"0_12393":{"AssemblyCenterOfMass":[-843,-399,799],"AssemblyMass":null,"SpecificGravity":1,"ClassName":"MeshPart","Parent":"0_12228","MeshSize":[2,0,2],"Name":"Meshes/Plane","BrickColor":29,"Size":[2048,0,2048],"Position":[-843,-399,799],"Anchored":true,"Material":[null,"Grass"],"brickColor":29,"CollisionFidelity":[null,"Default"],"MeshId":"rbxassetid://6192461670","AssemblyRootPart":"0_12393","Color":[1,1,0],"Mass":471859200000,"CFrame":[-843,-399,799,1,0,0,0,1,0,0,0,1]},"0_12368":{"Source":"local commands = require(script.Parent:WaitForChild(\"rModuleClient\", math.huge).Misc.commands)\n\ncommands:unbindall()\n\ncommands:bind(\"w\",\"+forward\")\ncommands:bind(\"s\",\"+back\")\ncommands:bind(\"a\",\"+moveleft\")\ncommands:bind(\"d\",\"+moveright\")\n\ncommands:bind(\"UPARROW\",\"+lookup\")\ncommands:bind(\"DOWNARROW\",\"+lookdown\")\ncommands:bind(\"LEFTARROW\",\"+left\")\ncommands:bind(\"RIGHTARROW\",\"+right\")\n\ncommands:bind(\"SPACE\",\"+jump\")\ncommands:bind(\"CTRL\",\"+duck\")\ncommands:bind(\"TAB\",\"+showscores\")\ncommands:bind(\"SHIFT\",\"+speed\")\ncommands:bind(\"ENTER\",\"+attack\")\ncommands:bind(\"ALT\",\"+walk\")\ncommands:bind(\"MOUSE1\",\"+attack\")\ncommands:bind(\"MOUSE2\",\"+attack2\")\ncommands:bind(\"MWHEELUP\",\"invprev\")\ncommands:bind(\"MWHEELDOWN\",\"invnext\")\n\ncommands:bind(\"PAUSE\",\"pause\")\ncommands:bind(\"ESCAPE\",\"cancelselect\")\ncommands:bind(\"~\",\"toggleconsole\")\ncommands:bind(\"`\",\"toggleconsole\")\n\ncommands:bind(\"F1\",\"gm_showhelp\")\ncommands:bind(\"F2\",\"gm_showteam\")\ncommands:bind(\"F3\",\"gm_showspare1\")\ncommands:bind(\"F4\",\"gm_showspare2\")\ncommands:bind(\"F5\",\"jpeg\")\ncommands:bind(\"F7\",\"save quick\")\ncommands:bind(\"F8\",\"load quick\")\ncommands:bind(\"F10\",\"toggleconsole\")\n\ncommands:bind(\"1\",\"slot1\")\ncommands:bind(\"2\",\"slot2\")\ncommands:bind(\"3\",\"slot3\")\ncommands:bind(\"4\",\"slot4\")\ncommands:bind(\"5\",\"slot5\")\ncommands:bind(\"6\",\"slot6\")\ncommands:bind(\"7\",\"slot7\")\ncommands:bind(\"8\",\"slot8\")\ncommands:bind(\"9\",\"slot9\")\ncommands:bind(\"0\",\"slot0\")\n\ncommands:bind(\"q\",\"+menu\")\ncommands:bind(\"e\",\"+use\")\ncommands:bind(\"r\",\"+reload\")\ncommands:bind(\"t\",\"impulse 201\")\ncommands:bind(\"y\",\"messagemode\")\ncommands:bind(\"u\",\"messagemode2\")\n\ncommands:bind(\"f\",\"impulse 100\")\n\ncommands:bind(\"z\",\"gmod_undo\")\ncommands:bind(\"x\",\"+voicerecord\")\ncommands:bind(\"c\",\"+menu_context\")\ncommands:bind(\"v\",\"noclip\")\ncommands:bind(\"b\",\"+zoom\")\n\ncommands:cl_allowupload(true)\ncommands:cl_smooth(true)\ncommands:mp_decals(2048)\ncommands:r_decals(2048)\ncommands:sensitivity(6)\n","Name":"config_default","ClassName":"LocalScript","Parent":"0_12239"},"0_12406":{"Name":"cl_search_models","ClassName":"ModuleScript","Parent":"0_12213","Source":"\nlocal sbox_search_maxresults = CreateClientConVar( \"sbox_search_maxresults\", \"1024\", true, false, \"The maximum amount of results the spawnmenu search should show. Model amount limited to 1/2 of this value, entities are limited to 1/4\", 1024 )\n\nlocal totalCalls = 0\nlocal expectedCalls = 1\n\nlocal queuedSearch = {}\n\nlocal function GetAllFiles( tab, folder, extension, path )\n\n\ttotalCalls = totalCalls + 1\n\n\tlocal files, folders = file.Find( folder .. \"*\", path )\n\n\tif ( !files ) then\n\t\tMsgN( \"Warning! Ignoring '\" .. folder .. \"' because we cannot search in it!\" )\n\t\treturn\n\tend\n\n\tfor k, v in pairs( files ) do\n\n\t\tif ( v:EndsWith( extension ) ) then\n\t\t\ttable.insert( tab, ( folder .. v ):lower() )\n\t\tend\n\n\tend\n\n\tfor k, v in pairs( folders ) do\n\t\texpectedCalls = expectedCalls + 1\n\t\ttable.insert( queuedSearch, { tab, folder .. v .. \"/\", extension, path } )\n\tend\n\n\tnotification.AddProgress( \"SandboxSearchIndexing\", \"#spawnmenu.searchindex\", totalCalls / expectedCalls )\n\tif ( totalCalls >= expectedCalls ) then notification.Kill( \"SandboxSearchIndexing\" ) end\n\nend\n\nhook.Add( \"Think\", \"sandbox_queued_search\", function()\n\n\tif ( #queuedSearch < 1 ) then return end\n\n\tlocal call = queuedSearch[ 1 ]\n\tGetAllFiles( unpack( call ) )\n\ttable.remove( queuedSearch, 1 )\n\n\tif ( !timer.Exists( \"search_models_update\" ) || #queuedSearch < 1 ) then\n\t\ttimer.Create( \"search_models_update\", 1, 1, function() hook.Run( \"SearchUpdate\" ) end )\n\tend\n\nend )\n\n--\n-- Model Search\n--\nlocal model_list = nil\nsearch.AddProvider( function( str )\n\n\tif ( model_list == nil ) then\n\n\t\tmodel_list = {}\n\t\tGetAllFiles( model_list, \"models/\", \".mdl\", \"GAME\" )\n\n\tend\n\n\tlocal models = {}\n\n\tfor k, v in pairs( model_list ) do\n\n\t\t-- Don't search in the models/ and .mdl bit of every model, because every model has this bit, unless they are looking for direct model path\n\t\tlocal modelpath = v\n\t\tif ( modelpath:StartWith( \"models/\" ) && modelpath:EndsWith( \".mdl\" ) && !str:EndsWith( \".mdl\" ) ) then modelpath = modelpath:sub( 8, modelpath:len() - 4 ) end\n\n\t\tif ( modelpath:find( str, nil, true ) ) then\n\n\t\t\tif ( IsUselessModel( v ) ) then continue end\n\n\t\t\tlocal entry = {\n\t\t\t\ttext = v:GetFileFromFilename(),\n\t\t\t\tfunc = function() RunConsoleCommand( \"gm_spawn\", v ) end,\n\t\t\t\ticon = spawnmenu.CreateContentIcon( \"model\", g_SpawnMenu.SearchPropPanel, { model = v } ),\n\t\t\t\twords = { v }\n\t\t\t}\n\n\t\t\ttable.insert( models, entry )\n\n\t\tend\n\n\t\tif ( #models >= sbox_search_maxresults:GetInt() / 2 ) then break end\n\n\tend\n\n\treturn models\n\nend, \"props\" )\n\n--\n-- Entity, vehicles\n--\nlocal function AddSearchProvider( listname, ctype, stype )\n\tsearch.AddProvider( function( str )\n\n\t\tlocal results = {}\n\t\tlocal entities = {}\n\n\t\tfor k, v in pairs( list.Get( listname ) ) do\n\t\t\tif ( listname == \"Weapon\" && !v.Spawnable ) then continue end\n\t\t\tv.ClassName = k\n\t\t\tv.PrintName = v.PrintName or v.Name\n\t\t\tv.ScriptedEntityType = ctype\n\t\t\ttable.insert( entities, v )\n\t\tend\n\n\t\tfor k, v in pairs( entities ) do\n\n\t\t\tlocal name = v.PrintName\n\t\t\tlocal name_c = v.ClassName\n\t\t\tif ( !name && !name_c ) then continue end\n\n\t\t\tif ( ( name && name:lower():find( str, nil, true ) ) || ( name_c && name_c:lower():find( str, nil, true ) ) ) then\n\n\t\t\t\tlocal entry = {\n\t\t\t\t\ttext = v.PrintName or v.ClassName,\n\t\t\t\t\ticon = spawnmenu.CreateContentIcon( v.ScriptedEntityType or \"entity\", nil, {\n\t\t\t\t\t\tnicename = v.PrintName or v.ClassName,\n\t\t\t\t\t\tspawnname = v.ClassName,\n\t\t\t\t\t\tmaterial = \"entities/\" .. v.ClassName .. \".png\",\n\n\t\t\t\t\t\tadmin = v.AdminOnly\n\t\t\t\t\t} ),\n\t\t\t\t\twords = { v }\n\t\t\t\t}\n\n\t\t\t\ttable.insert( results, entry )\n\n\t\t\tend\n\n\t\t\tif ( #results >= sbox_search_maxresults:GetInt() / 4 ) then break end\n\n\t\tend\n\n\t\ttable.SortByMember( results, \"text\", true )\n\t\treturn results\n\n\tend, stype )\nend\n\nAddSearchProvider( \"SpawnableEntities\", \"entity\", \"entities\" )\nAddSearchProvider( \"Vehicles\", \"vehicle\", \"vehicles\" )\nAddSearchProvider( \"NPC\", \"npc\", \"npcs\" )\nAddSearchProvider( \"Weapon\", \"weapon\", \"weapons\" )\n"},"0_12238":{"Parent":"0_12236","ClassName":"Folder","Name":"spawnlist_default"},"0_12408":{"Name":"cl_worldtips","ClassName":"ModuleScript","Parent":"0_12213","Source":"\n\nsurface.CreateFont( \"GModWorldtip\",\n\t{\n\t\tfont\t\t= \"Helvetica\",\n\t\tsize\t\t= 20,\n\t\tweight\t\t= 700\n\t})\n\nlocal cl_drawworldtooltips = CreateConVar( \"cl_drawworldtooltips\", \"1\", { FCVAR_ARCHIVE } )\nlocal WorldTip = nil\n\nlocal TipColor = Color( 250, 250, 200, 255 )\n\n--\n-- Adds a hint to the queue\n--\nfunction AddWorldTip( unused1, text, unused2, pos, ent )\n\n\tWorldTip = {}\n\n\tWorldTip.dietime \t= SysTime() + 0.05\n\tWorldTip.text \t\t= text\n\tWorldTip.pos \t\t= pos\n\tWorldTip.ent \t\t= ent\n\nend\n\n\nlocal function DrawWorldTip( tip )\n\n\tif ( IsValid( tip.ent ) ) then\t\n\t\ttip.pos = tip.ent:GetPos()\n\tend\n\n\tlocal pos = tip.pos:ToScreen()\n\n\tlocal black = Color( 0, 0, 0, 255 )\n\tlocal tipcol = Color( TipColor.r, TipColor.g, TipColor.b, 255 )\n\n\tlocal x = 0\n\tlocal y = 0\n\tlocal padding = 10\n\tlocal offset = 50\n\n\tsurface.SetFont( \"GModWorldtip\" )\n\tlocal w, h = surface.GetTextSize( tip.text )\n\n\tx = pos.x - w \n\ty = pos.y - h \n\n\tx = x - offset\n\ty = y - offset\n\n\tdraw.RoundedBox( 8, x-padding-2, y-padding-2, w+padding*2+4, h+padding*2+4, black )\n\n\n\tlocal verts = {}\n\tverts[1] = { x=x+w/1.5-2, y=y+h+2 }\n\tverts[2] = { x=x+w+2, y=y+h/2-1 }\n\tverts[3] = { x=pos.x-offset/2+2, y=pos.y-offset/2+2 }\n\n\tdraw.NoTexture()\n\tsurface.SetDrawColor( 0, 0, 0, tipcol.a )\n\tsurface.DrawPoly( verts )\n\n\n\tdraw.RoundedBox( 8, x-padding, y-padding, w+padding*2, h+padding*2, tipcol )\n\n\tlocal verts = {}\n\tverts[1] = { x=x+w/1.5, y=y+h }\n\tverts[2] = { x=x+w, y=y+h/2 }\n\tverts[3] = { x=pos.x-offset/2, y=pos.y-offset/2 }\n\n\tdraw.NoTexture()\n\tsurface.SetDrawColor( tipcol.r, tipcol.g, tipcol.b, tipcol.a )\n\tsurface.DrawPoly( verts )\n\n\n\tdraw.DrawText( tip.text, \"GModWorldtip\", x + w/2, y, black, TEXT_ALIGN_CENTER )\n\nend\n\n\nfunction GM:PaintWorldTips()\n\n\tif ( !cl_drawworldtooltips:GetBool() ) then return end\n\n\tif ( WorldTip && WorldTip.dietime > SysTime() ) then\n\t\tDrawWorldTip( WorldTip )\t\t\n\tend\n\nend\n"},"0_12215":{"Parent":"0_12213","ClassName":"Folder","Name":"player_class"},"0_12364":{"Value":6182293804,"Parent":"0_12176","ClassName":"IntValue","Name":".5.5"},"0_12196":{"Parent":"0_12183","ClassName":"Folder","Name":"terrortown"},"0_12229":{"Parent":"0_12224","ClassName":"Folder","Name":"gm_construct"},"0_12222":{"Parent":"0_12221","ClassName":"Folder","Name":"duplicator"},"0_12528":{"Value":"1fb8ce6f301b406889508a244bb520665950e633f39b464492734d54397043e91196e2b8206040bd9c7a470c4c3d472653bcd6e53f404df4a8d2d83409a47147","Parent":"0_12182","ClassName":"StringValue","Name":"permkey"},"0_12399":{"Name":"cl_notice","ClassName":"ModuleScript","Parent":"0_12185","Source":"\nfunction GM:AddNotify( str, type, length )\n\n\tnotification.AddLegacy( str, type, length )\n\nend\n\nfunction GM:PaintNotes()\nend\n"},"0_12186":{"Parent":"0_12185","ClassName":"Folder","Name":"gui"},"0_12225":{"Parent":"0_12224","ClassName":"Folder","Name":"gm_flatgrass"},"0_12197":{"Parent":"0_12196","ClassName":"Folder","Name":"entities"},"0_12227":{"Parent":"0_12225","ClassName":"Folder","Name":"ain"},"0_12228":{"Parent":"0_12225","ClassName":"Folder","Name":"bsp"},"0_12526":{"Parent":"0_12212","ClassName":"StringValue","Name":"logo"},"0_12180":{"Texture":"rbxassetid://6192499710","ClassName":"Decal","Parent":"0_12435","Face":[null,"Top"]},"0_12219":{"Parent":"0_12217","ClassName":"Folder","Name":"weapons"},"0_12363":{"Value":6182529247,"Parent":"0_12175","ClassName":"IntValue","Name":"0.0."},"0_12435":{"SpecificGravity":1,"Position":[-843,7176,799],"Rotation":[-180,0,0],"Size":[2048,0,2048],"AssemblyCenterOfMass":[-843,7176,799],"Transparency":1,"Material":[null,"Grass"],"AssemblyRootPart":"0_12435","TopSurface":[null,"Smooth"],"Orientation":[0,180,180],"AssemblyMass":188744,"Parent":"0_12228","ClassName":"Part","BottomSurface":[null,"Smooth"],"Mass":188744,"CFrame":[-843,7176,799,1,0,0,0,-1,0,0,0,-1]},"0_12360":{"Value":6182528193,"Parent":"0_12175","ClassName":"IntValue","Name":"1.1."},"0_12524":{"Value":"{\"base\":\"base\",\"title\":\"Sandbox\",\"maps\":\"^gm_|^gmod_|^phys_\",\"menusystem\":\"1\",\"settings\":[{\"name\":\"physgun_limited\",\"text\":\"limit_physgun\",\"help\":\"If enabled, the Physics Gun will not be able to pick up certain map entities\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sbox_weapons\",\"text\":\"enable_weapons\",\"help\":\"If enabled, each player will receive default Half-Life 2 weapons on each spawn\",\"type\":\"boolean\",\"default\":true,\"singleplayer\":true},{\"name\":\"sbox_godmode\",\"text\":\"allow_god_mode\",\"help\":\"If enabled, all players will be invincible\",\"type\":\"boolean\",\"default\":false,\"singleplayer\":true},{\"name\":\"sbox_playershurtplayers\",\"text\":\"players_damage_players\",\"help\":\"If enabled, players will be able to hurt each other\",\"type\":\"boolean\",\"default\":true},{\"name\":\"sbox_maxprops\",\"text\":\"max_props\",\"help\":\"Maximum props a single player can create\",\"type\":\"float\",\"default\":200},{\"name\":\"sbox_maxragdolls\",\"text\":\"max_ragdolls\",\"help\":\"Maximum ragdolls a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxvehicles\",\"text\":\"max_vehicles\",\"help\":\"Maximum vehicles a single player can create\",\"type\":\"float\",\"default\":4},{\"name\":\"sbox_maxeffects\",\"text\":\"max_effects\",\"help\":\"Maximum effect props a single player can create\",\"type\":\"float\",\"default\":200},{\"name\":\"sbox_maxballoons\",\"text\":\"max_balloons\",\"help\":\"Maximum balloons a single player can create\",\"type\":\"float\",\"default\":100},{\"name\":\"sbox_maxcameras\",\"text\":\"max_cameras\",\"help\":\"Maximum cameras a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxnpcs\",\"text\":\"max_npcs\",\"help\":\"Maximum NPCs a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxsents\",\"text\":\"max_entities\",\"help\":\"Maximum entities a single player can create\",\"type\":\"float\",\"default\":100},{\"name\":\"sbox_maxdynamite\",\"text\":\"max_dynamite\",\"help\":\"Maximum dynamites a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxlamps\",\"text\":\"max_lamps\",\"help\":\"Maximum lamps a single player can create\",\"type\":\"float\",\"default\":3},{\"name\":\"sbox_maxlights\",\"text\":\"max_lights\",\"help\":\"Maximum lights a single player can create\",\"type\":\"float\",\"default\":5},{\"name\":\"sbox_maxwheels\",\"text\":\"max_wheels\",\"help\":\"Maximum wheels a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxthrusters\",\"text\":\"max_thrusters\",\"help\":\"Maximum thrusters a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxhoverballs\",\"text\":\"max_hoverballs\",\"help\":\"Maximum hoverballs a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxbuttons\",\"text\":\"max_buttons\",\"help\":\"Maximum buttons a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxemitters\",\"text\":\"max_emitters\",\"help\":\"Maximum emitters a single player can create\",\"type\":\"float\",\"default\":20},{\"name\":\"gmod_maxammo\",\"text\":\"gmod_maxammo\",\"help\":\"Forces amount of maximum ammo reserves for all weapons of each player. Values 0 and below mean use weapon's ammo type maximum ammo setting instead.\",\"type\":\"float\",\"default\":9999,\"singleplayer\":true,\"dontcreate\":true},{\"name\":\"gmod_suit\",\"text\":\"gmod_suit\",\"help\":\"Set to non zero to enable Half-Life 2 aux suit power stuff.\",\"type\":\"boolean\",\"default\":false,\"singleplayer\":true,\"dontcreate\":true},{\"name\":\"sbox_noclip\",\"text\":\"allow_noclip\",\"help\":\"If enabled, players will be able to use noclip\",\"type\":\"boolean\",\"default\":true},{\"name\":\"mp_falldamage\",\"text\":\"realistic_falldamage\",\"help\":\"Enable realistic fall damage\",\"type\":\"boolean\",\"default\":false,\"singleplayer\":true,\"dontcreate\":true},{\"name\":\"sbox_bonemanip_npc\",\"text\":\"bone_manipulate_npcs\",\"help\":\"If enabled then manipulating NPC bones will be allowed\",\"type\":\"boolean\",\"default\":true},{\"name\":\"sbox_bonemanip_player\",\"text\":\"bone_manipulate_players\",\"help\":\"If enabled then manipulating Player bones will be allowed\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sbox_bonemanip_misc\",\"text\":\"bone_manipulate_others\",\"help\":\"If enabled then manipulating the bones of other entities will be allowed\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sbox_persist\",\"text\":\"persistent_mode_menu\",\"help\":\"Enables 'Make Persistent' option when you right click on props while holding C, allowing you to save them across sessions. Leave empty to disable\",\"type\":\"string\",\"default\":\"\",\"singleplayer\":true}]}","Parent":"0_12196","ClassName":"StringValue","Name":"info"},"0_12232":{"Parent":"0_12229","ClassName":"Folder","Name":"ain"},"0_12525":{"Value":"{\"title\":\"Base\",\"base\":\"\"}","Parent":"0_12212","ClassName":"StringValue","Name":"info"},"0_12520":{"Parent":"0_12184","ClassName":"StringValue","Name":"logo"},"0_12210":{"Parent":"0_12208","ClassName":"Folder","Name":"models"},"0_12405":{"Name":"cl_notice","ClassName":"ModuleScript","Parent":"0_12213","Source":"\nfunction GM:AddNotify( str, type, length )\n\n\tnotification.AddLegacy( str, type, length )\n\nend\n\nfunction GM:PaintNotes()\nend\n"},"0_12239":{"Parent":"0_12182","ClassName":"Folder","Name":"cfg"},"0_12192":{"Parent":"0_12191","ClassName":"Folder","Name":"gmod_tool"},"0_12221":{"Parent":"0_12220","ClassName":"Folder","Name":"stools"},"0_12193":{"Parent":"0_12192","ClassName":"Folder","Name":"stools"},"0_12434":{"AssemblyCenterOfMass":[-843,-280,799],"SpecificGravity":1,"Name":"Grass","BrickColor":141,"Size":[2014,80,2014],"Position":[-843,-280,799],"Anchored":true,"Material":[null,"Grass"],"brickColor":141,"AssemblyRootPart":"0_12434","Color":[0,0,0],"TopSurface":[null,"Smooth"],"AssemblyMass":null,"ClassName":"Part","Parent":"0_12228","BottomSurface":[null,"Smooth"],"Mass":291780288,"CFrame":[-843,-280,799,1,0,0,0,1,0,0,0,1]},"0_12519":{"Value":"{\"base\":\"base\",\"title\":\"Sandbox\",\"maps\":\"^gm_|^gmod_|^phys_\",\"menusystem\":\"1\",\"settings\":[{\"name\":\"physgun_limited\",\"text\":\"limit_physgun\",\"help\":\"If enabled, the Physics Gun will not be able to pick up certain map entities\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sbox_weapons\",\"text\":\"enable_weapons\",\"help\":\"If enabled, each player will receive default Half-Life 2 weapons on each spawn\",\"type\":\"boolean\",\"default\":true,\"singleplayer\":true},{\"name\":\"sbox_godmode\",\"text\":\"allow_god_mode\",\"help\":\"If enabled, all players will be invincible\",\"type\":\"boolean\",\"default\":false,\"singleplayer\":true},{\"name\":\"sbox_playershurtplayers\",\"text\":\"players_damage_players\",\"help\":\"If enabled, players will be able to hurt each other\",\"type\":\"boolean\",\"default\":true},{\"name\":\"sbox_maxprops\",\"text\":\"max_props\",\"help\":\"Maximum props a single player can create\",\"type\":\"float\",\"default\":200},{\"name\":\"sbox_maxragdolls\",\"text\":\"max_ragdolls\",\"help\":\"Maximum ragdolls a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxvehicles\",\"text\":\"max_vehicles\",\"help\":\"Maximum vehicles a single player can create\",\"type\":\"float\",\"default\":4},{\"name\":\"sbox_maxeffects\",\"text\":\"max_effects\",\"help\":\"Maximum effect props a single player can create\",\"type\":\"float\",\"default\":200},{\"name\":\"sbox_maxballoons\",\"text\":\"max_balloons\",\"help\":\"Maximum balloons a single player can create\",\"type\":\"float\",\"default\":100},{\"name\":\"sbox_maxcameras\",\"text\":\"max_cameras\",\"help\":\"Maximum cameras a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxnpcs\",\"text\":\"max_npcs\",\"help\":\"Maximum NPCs a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxsents\",\"text\":\"max_entities\",\"help\":\"Maximum entities a single player can create\",\"type\":\"float\",\"default\":100},{\"name\":\"sbox_maxdynamite\",\"text\":\"max_dynamite\",\"help\":\"Maximum dynamites a single player can create\",\"type\":\"float\",\"default\":10},{\"name\":\"sbox_maxlamps\",\"text\":\"max_lamps\",\"help\":\"Maximum lamps a single player can create\",\"type\":\"float\",\"default\":3},{\"name\":\"sbox_maxlights\",\"text\":\"max_lights\",\"help\":\"Maximum lights a single player can create\",\"type\":\"float\",\"default\":5},{\"name\":\"sbox_maxwheels\",\"text\":\"max_wheels\",\"help\":\"Maximum wheels a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxthrusters\",\"text\":\"max_thrusters\",\"help\":\"Maximum thrusters a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxhoverballs\",\"text\":\"max_hoverballs\",\"help\":\"Maximum hoverballs a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxbuttons\",\"text\":\"max_buttons\",\"help\":\"Maximum buttons a single player can create\",\"type\":\"float\",\"default\":50},{\"name\":\"sbox_maxemitters\",\"text\":\"max_emitters\",\"help\":\"Maximum emitters a single player can create\",\"type\":\"float\",\"default\":20},{\"name\":\"gmod_maxammo\",\"text\":\"gmod_maxammo\",\"help\":\"Forces amount of maximum ammo reserves for all weapons of each player. Values 0 and below mean use weapon's ammo type maximum ammo setting instead.\",\"type\":\"float\",\"default\":9999,\"singleplayer\":true,\"dontcreate\":true},{\"name\":\"gmod_suit\",\"text\":\"gmod_suit\",\"help\":\"Set to non zero to enable Half-Life 2 aux suit power stuff.\",\"type\":\"boolean\",\"default\":false,\"singleplayer\":true,\"dontcreate\":true},{\"name\":\"sbox_noclip\",\"text\":\"allow_noclip\",\"help\":\"If enabled, players will be able to use noclip\",\"type\":\"boolean\",\"default\":true},{\"name\":\"mp_falldamage\",\"text\":\"realistic_falldamage\",\"help\":\"Enable realistic fall damage\",\"type\":\"boolean\",\"default\":false,\"singleplayer\":true,\"dontcreate\":true},{\"name\":\"sbox_bonemanip_npc\",\"text\":\"bone_manipulate_npcs\",\"help\":\"If enabled then manipulating NPC bones will be allowed\",\"type\":\"boolean\",\"default\":true},{\"name\":\"sbox_bonemanip_player\",\"text\":\"bone_manipulate_players\",\"help\":\"If enabled then manipulating Player bones will be allowed\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sbox_bonemanip_misc\",\"text\":\"bone_manipulate_others\",\"help\":\"If enabled then manipulating the bones of other entities will be allowed\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sbox_persist\",\"text\":\"persistent_mode_menu\",\"help\":\"Enables 'Make Persistent' option when you right click on props while holding C, allowing you to save them across sessions. Leave empty to disable\",\"type\":\"string\",\"default\":\"\",\"singleplayer\":true}]}","Parent":"0_12184","ClassName":"StringValue","Name":"info"},"0_12206":{"Parent":"0_12204","ClassName":"Folder","Name":"player_class"},"0_12199":{"Parent":"0_12197","ClassName":"Folder","Name":"weapons"},"0_12479":{"Source":"--[[ \nTrouble in Terrorist Town\n=========================\nGarry's Mod 13 gamemode \nBy Bad King Urgrain\nhttp://ttt.badking.net/\n\n\nDescription\n===========\nDisaster strikes in the Terrorist team! These plucky bomb-planting fighters \nhave traitors in their midst who are looking to kill them all! But who are \nthe traitors... and who will come out of this alive?\n\nInstallation\n============\nIf you're looking at a version of TTT included in gmod, you're already done!\n\nIf you're dealing with a .zip version, extract .zip contents into:\n  \"X:\\Steam\\steamapps\\common\\garrysmod\\garrysmod\\\"\n\nOr for a dedicated server:\n  \"X:\\srcds\\orangebox\\garrysmod\\\"\n\nSo that you get a \"\\garrysmod\\gamemodes\\terrortown\\\" directory.\n\nInstalling is never necessary if you only want to play on servers.\n\n\nDedicated server (srcds) preparation\n====================================\nThe gamemode _requires_ CS:S content to be installed. The Garry's Mod wiki\nhas some information on this here:\n* https://wiki.facepunch.com/gmod/Mounting_Content_on_a_Dedicated_Server\n  \nIf you want TTT to automatically switch maps every few rounds, place a\nmapcycle.txt in the \"\\garrysmod\\\" directory. It should contain a list of map\nnames, exactly like the mapcycle.txt in Source games like CS:S or HL2DM. If you\ndon't know what maps to use, just put in a list of the CS:S maps, all of them\nwork. See ttt_round_limit and such in the convar section below for more configuration.\n\nA common problem is strange issues with floating grenades, floating weapons, and\ninstant reloading. These are all caused by the server not having CS:S content\ninstalled. If the issues persist despite making sure the CS:S content is there,\ntry moving the \"cstrike\" directory into the \"orangebox\" one, so you get \"\\servername\\orangebox\\cstrike\\\".\n\nWhile TTT tries to do this automatically, you'll also want to turn off \"sv_alltalk\" if it's on. \nIt will override TTT's voice handling, and let dead people talk to living players during a round (bad). \nSo put \"sv_alltalk 0\" in your server.cfg.\n\nNote that you should disable \"sv_allowcslua\" (disabled by default, but you should add \"sv_allowcslua 0\" just incase) functionality. With it on,\ncheating will be very easy. All you should need to do is set \"sv_allowcslua\" to 0.\n\nModding the gamemode\n====================\nYou should feel free to modify the gamemode in any way you want.\n\nAn easy way of customizing TTT is creating your own weapons. You can add your\nown scripted weapons without touching the TTT code, so you won't have to\ndeal too much with code changes from TTT updates.\n\nTo get started with custom weapons, check the GMod wiki about SWEPs, and then\ntake a look at some of the standard TTT weapons that you can find in:\n* \"\\gamemodes\\terrortown\\entities\\weapons\\\"\n\nThe script for weapon_tttbase has a bunch of documentation you might find\nuseful. There is a guide available at http://ttt.badking.net/\n\nThere are a number of hooks you can use as well. Again, the site is the place to\nfind further information.\n\nConvars and concommands\n=======================\nThe list of all convars used to be here in the readme, but has been moved to the site, where it is easier to find\n* http://ttt.badking.net/config-and-commands/\n\nCredits\n=======\nBad King Urgrain made this in 2009/2010.\n\nWeapon/ammo/player spawn placement scripts included in TTT (such as those for\nthe CS:S maps) were contributed by the following people:\n* Ajunk\n* Broadsword\n* eeny\n* JossiRossi\n* that guy\n* worbat\n]]","Name":"README","ClassName":"Script","Parent":"0_12196","Disabled":true},"0_12179":{"Texture":"rbxassetid://6192399273","ClassName":"Decal","Parent":"0_12433","Face":[null,"Top"]},"0_12191":{"Parent":"0_12189","ClassName":"Folder","Name":"weapons"},"0_12230":{"Parent":"0_12229","ClassName":"Folder","Name":"bsp"},"0_12204":{"Parent":"0_12196","ClassName":"Folder","Name":"gamemode"},"0_12189":{"Parent":"0_12184","ClassName":"Folder","Name":"entities"},"0_12401":{"Name":"cl_spawnmenu","ClassName":"ModuleScript","Parent":"0_12185","Source":"\ninclude( \"spawnmenu/spawnmenu.lua\" )\n\n--[[---------------------------------------------------------\n\tIf false is returned then the spawn menu is never created.\n\tThis saves load times if your mod doesn't actually use the\n\tspawn menu for any reason.\n-----------------------------------------------------------]]\nfunction GM:SpawnMenuEnabled()\n\treturn true\nend\n\n--[[---------------------------------------------------------\n\tCalled when spawnmenu is trying to be opened.\n\tReturn false to dissallow it.\n-----------------------------------------------------------]]\nfunction GM:SpawnMenuOpen()\n\treturn true\nend\n\nfunction GM:SpawnMenuOpened()\n\tself:SuppressHint( \"OpeningMenu\" )\n\tself:AddHint( \"OpeningContext\", 20 )\n\tself:AddHint( \"EditingSpawnlists\", 5 )\nend\n\nfunction GM:SpawnMenuClosed()\nend\n\nfunction GM:SpawnMenuCreated(spawnmenu)\nend\n\n--[[---------------------------------------------------------\n\tIf false is returned then the context menu is never created.\n\tThis saves load times if your mod doesn't actually use the\n\tcontext menu for any reason.\n-----------------------------------------------------------]]\nfunction GM:ContextMenuEnabled()\n\treturn true\nend\n\n--[[---------------------------------------------------------\n\tCalled when context menu is trying to be opened.\n\tReturn false to dissallow it.\n-----------------------------------------------------------]]\nfunction GM:ContextMenuOpen()\n\treturn true\nend\n\nfunction GM:ContextMenuOpened()\n\tself:SuppressHint( \"OpeningContext\" )\n\tself:AddHint( \"ContextClick\", 20 )\nend\n\nfunction GM:ContextMenuClosed()\nend\n\nfunction GM:ContextMenuCreated()\nend\n\n--[[---------------------------------------------------------\n\tBackwards compatibility. Do Not Use!!!\n-----------------------------------------------------------]]\nfunction GM:GetSpawnmenuTools( name )\n\treturn spawnmenu.GetToolMenu( name )\nend\n\n--[[---------------------------------------------------------\n\tBackwards compatibility. Do Not Use!!!\n-----------------------------------------------------------]]\nfunction GM:AddSTOOL( category, itemname, text, command, controls, cpanelfunction )\n\tself:AddToolmenuOption( \"Main\", category, itemname, text, command, controls, cpanelfunction )\nend\n\nfunction GM:PreReloadToolsMenu()\nend\n\n--[[---------------------------------------------------------\n\tDon't hook or override this function.\n\tHook AddToolMenuTabs instead!\n-----------------------------------------------------------]]\nfunction GM:AddGamemodeToolMenuTabs()\n\n\t-- This is named like this to force it to be the first tab\n\tspawnmenu.AddToolTab( \"Main\",\t\t\"#spawnmenu.tools_tab\", \"icon16/wrench.png\" )\n\tspawnmenu.AddToolTab( \"Utilities\",\t\"#spawnmenu.utilities_tab\", \"icon16/page_white_wrench.png\" )\n\nend\n\n--[[---------------------------------------------------------\n\tAdd your custom tabs here.\n-----------------------------------------------------------]]\nfunction GM:AddToolMenuTabs()\n\n\t-- Hook me!\n\nend\n\n--[[---------------------------------------------------------\n\tAdd categories to your tabs\n-----------------------------------------------------------]]\nfunction GM:AddGamemodeToolMenuCategories()\n\n\tspawnmenu.AddToolCategory( \"Main\", \"Constraints\",\t\"#spawnmenu.tools.constraints\" )\n\tspawnmenu.AddToolCategory( \"Main\", \"Construction\",\t\"#spawnmenu.tools.construction\" )\n\tspawnmenu.AddToolCategory( \"Main\", \"Poser\",\t\t\t\"#spawnmenu.tools.posing\" )\n\tspawnmenu.AddToolCategory( \"Main\", \"Render\",\t\t\"#spawnmenu.tools.render\" )\n\nend\n\n--[[---------------------------------------------------------\n\tAdd categories to your tabs\n-----------------------------------------------------------]]\nfunction GM:AddToolMenuCategories()\n\n\t-- Hook this function to add custom stuff\n\nend\n\nfunction GM:PopulateToolMenu()\nend\n\nfunction GM:PostReloadToolsMenu()\nend\n\n--[[---------------------------------------------------------\n\tAdd categories to your tabs\n-----------------------------------------------------------]]\nfunction GM:PopulatePropMenu()\n\n\t-- This function makes the engine load the spawn menu text files.\n\t-- We call it here so that any gamemodes not using the default\n\t-- spawn menu can totally not call it.\n\tspawnmenu.PopulateFromEngineTextFiles()\n\nend\n"},"0_12175":{"Parent":"0_12233","ClassName":"Configuration","Name":"tmp_default"},"0_12208":{"Parent":"0_12196","ClassName":"Folder","Name":"content"},"0_12214":{"Parent":"0_12213","ClassName":"Folder","Name":"gui"},"0_12236":{"Parent":"0_12182","ClassName":"Folder","Name":"settings"},"0_12212":{"Parent":"0_12183","ClassName":"Folder","Name":"base"},"0_12527":{"Parent":"0_12212","ClassName":"StringValue","Name":"icon"},"0_12362":{"Value":6182528519,"Parent":"0_12175","ClassName":"IntValue","Name":"1.0."},"0_12403":{"Name":"cl_hints","ClassName":"ModuleScript","Parent":"0_12213","Source":"\n\nCreateClientConVar( \"cl_showhints\", \"1\", true, false )\n\n-- A list of hints we've already done so we don't repeat ourselves`\nlocal ProcessedHints = {}\n\n--\n-- Throw's a Hint to the screen\n--\nlocal function ThrowHint( name )\n\n\tlocal show = GetConVarNumber( \"cl_showhints\" )\n\tif ( show == 0 ) then return end\n\n\tif ( engine.IsPlayingDemo() ) then return end\n\n\tlocal text = language.GetPhrase( \"Hint_\" .. name )\n\n\tlocal s, e, group = string.find( text, \"%%([^%%]+)%%\" )\n\twhile ( s ) do\n\t\tlocal key = input.LookupBinding( group )\n\t\tif ( !key ) then key = \"<NOT BOUND>\" end\n\n\t\ttext = string.gsub( text, \"%%([^%%]+)%%\", \"'\" .. key:upper() .. \"'\" )\n\t\ts, e, group = string.find( text, \"%%([^%%]+)%%\" )\n\tend\n\n\tGAMEMODE:AddNotify( text, NOTIFY_HINT, 20 )\n\n\tsurface.PlaySound( \"ambient/water/drip\" .. math.random( 1, 4 ) .. \".wav\" )\n\nend\n\n\n--\n-- Adds a hint to the queue\n--\nfunction GM:AddHint( name, delay )\n\n\tif ( ProcessedHints[ name ] ) then return end\n\n\ttimer.Create( \"HintSystem_\" .. name, delay, 1, function() ThrowHint( name ) end )\n\tProcessedHints[ name ] = true\n\nend\n\n--\n-- Removes a hint from the queue\n--\nfunction GM:SuppressHint( name )\n\n\ttimer.Remove( \"HintSystem_\" .. name )\n\nend\n\n-- Show opening menu hint if they haven't opened the menu within 30 seconds\nGM:AddHint( \"OpeningMenu\", 30 )\n\n-- Tell them how to turn the hints off after 1 minute\nGM:AddHint( \"Annoy1\", 5 )\nGM:AddHint( \"Annoy2\", 7 )\n"},"0_12209":{"Parent":"0_12208","ClassName":"Folder","Name":"maps"},"0_12198":{"Parent":"0_12197","ClassName":"Folder","Name":"entities"},"0_12174":{"Parent":"0_12212","ClassName":"Configuration","Name":"backgrounds"},"0_12194":{"Parent":"0_12193","ClassName":"Folder","Name":"duplicator"},"0_12514":{"Parent":"0_12433","ClassName":"SpecialMesh","MeshType":[null,"FileMesh"],"MeshId":"rbxassetid://6192398604","Scale":[120,120,120]},"0_12523":{"Parent":"0_12196","ClassName":"StringValue","Name":"icon"},"0_12188":{"Parent":"0_12185","ClassName":"Folder","Name":"spawnmenu"},"0_12234":{"Parent":"0_12182","ClassName":"Folder","Name":"lua"},"0_12185":{"Parent":"0_12184","ClassName":"Folder","Name":"gamemode"},"0_12216":{"Parent":"0_12213","ClassName":"Folder","Name":"spawnmenu"},"0_12237":{"Parent":"0_12236","ClassName":"Folder","Name":"spawnlist"},"0_12231":{"Parent":"0_12229","ClassName":"Folder","Name":"nav"},"0_12433":{"Name":"Billboard","Anchored":true,"Position":[704,-324,-529],"Size":[944,73,1089],"AssemblyCenterOfMass":[704,-324,-529],"Transparency":1,"Material":[null,"Fabric"],"AssemblyRootPart":"0_12433","TopSurface":[null,"Smooth"],"AssemblyMass":null,"Parent":"0_12228","ClassName":"Part","BottomSurface":[null,"Smooth"],"Mass":52393672,"CFrame":[704,-324,-529,1,0,0,0,1,0,0,0,1]},"0_12200":{"Parent":"0_12199","ClassName":"Folder","Name":"gmod_tool"},"0_12392":{"AssemblyCenterOfMass":[-822,-371,796],"SpecificGravity":2,"ClassName":"MeshPart","Parent":"0_12228","MeshSize":[1,0,1],"Name":"Meshes/Flatgrass_Concrete","Size":[174,44,174],"Position":[-839,-378,796],"Anchored":true,"Material":[null,"Concrete"],"CenterOfMass":[17,7,0],"AssemblyMass":null,"CollisionFidelity":[null,"Default"],"MeshId":"rbxassetid://6192275165","AssemblyRootPart":"0_12392","Mass":1166975,"CFrame":[-839,-378,796,1,0,0,0,1,0,0,0,1]},"0_12480":{"Source":"--[[\n//-------------------------------------------------------------------------\n//\n// Game data for TTT\n//\n//-------------------------------------------------------------------------\n\n@include \"base.fgd\" \n\n@BaseClass color(0 0 200) base(Targetname, Angles, Shadow) = TTTItem\n[\n\toutput OnPlayerTouch(void) : \"Fires when the player touches this object\"\n]\n\n@PointClass base(TTTItem) studio(\"models/items/boxsrounds.mdl\")= item_ammo_pistol_ttt : \"Box of Pistol ammo\" []\n@PointClass base(TTTItem) studio(\"models/items/boxmrounds.mdl\")= item_ammo_smg1_ttt : \"MAC10 ammo\" []\n@PointClass base(TTTItem) studio(\"models/items/357ammo.mdl\")= item_ammo_357_ttt : \"Box of Carbine ammo\" []\n@PointClass base(TTTItem) studio(\"models/items/BoxBuckshot.mdl\")= item_box_buckshot_ttt : \"Box Buckshot\" []\n@PointClass base(TTTItem) studio(\"models/items/357ammo.mdl\")= item_ammo_revolver_ttt : \"Box of Deagle ammo\" []\n\n@PointClass base(TTTItem) studio(\"models/items/boxflares.mdl\")= ttt_random_ammo : \"Random ammo\" []\n@PointClass base(TTTItem) studio(\"models/weapons/w_shotgun.mdl\")= ttt_random_weapon : \"Random weapon\" [\n\tauto_ammo(integer) : \"Autospawn ammo items\" : 0 : \"Number of matching ammo entities to spawn around the weapon. Leave some room above this entity for the ammo, it will be spawned there, fall and end up around the gun. Set to 0 to disable.\"\n]\n\n@BaseClass color(0 0 200) base(Targetname, Angles) = Weapon\n[\n\tspawnflags(Flags) =\n\t[\n\t\t1 : \"Start constrained\" : 0\n\t]\n\n\toutput OnPlayerUse(void) : \"Fires when the player +uses this weapon\"\n\toutput OnPlayerPickup(void) : \"Fires when the player picks up this weapon\"\n\toutput OnNPCPickup(void) : \"Fires when an NPC picks up this weapon\"\n]\n\n@PointClass base(Weapon) studio(\"models/weapons/w_shot_xm1014.mdl\") = weapon_zm_shotgun : \"Shotgun\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_crowbar.mdl\") = weapon_zm_improvised : \"Crowbar\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_pist_fiveseven.mdl\") = weapon_zm_pistol : \"Pistol\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_snip_scout.mdl\") = weapon_zm_rifle : \"Carbine\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_eq_flashbang.mdl\") = weapon_zm_molotov : \"Incendiary Grenade\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_eq_smokegrenade.mdl\") = weapon_ttt_smokegrenade : \"Smoke Grenade\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_eq_fraggrenade.mdl\") = weapon_ttt_confgrenade : \"Discombobulator\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_smg_mac10.mdl\") = weapon_zm_mac10 : \"MAC 10\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_pist_deagle.mdl\") = weapon_zm_revolver : \"Deagle\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_mach_m249para.mdl\") = weapon_zm_sledge : \"HUGE249\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_rif_m4a1.mdl\") = weapon_ttt_m16 : \"M16\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_pist_glock18.mdl\") = weapon_ttt_glock : \"Glock\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_knife_t.mdl\") = weapon_ttt_knife : \"Knife\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_pist_usp_silencer.mdl\") = weapon_ttt_sipistol : \"Silent Pistol\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_357.mdl\") = weapon_ttt_flaregun : \"Flaregun\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_physics.mdl\") = weapon_ttt_push : \"Newton launcher\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_IRifle.mdl\") = weapon_ttt_phammer : \"Poltergeist\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_c4.mdl\") = weapon_ttt_c4 : \"C4\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_slam.mdl\") = weapon_ttt_teleport : \"Teleporter\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_smg_ump45.mdl\") = weapon_ttt_stungun : \"UMP Prototype\" []\n@PointClass base(Weapon) studio(\"models/props/cs_office/microwave.mdl\") = ttt_health_station : \"Health Station\" []\n@PointClass base(Weapon) studio(\"models/props/cs_office/paper_towels.mdl\") = weapon_ttt_binoculars : \"Binoculars\" []\n@PointClass base(Weapon) studio(\"models/Items/battery.mdl\") = weapon_ttt_cse : \"Visualizer\" []\n@PointClass base(Weapon) studio(\"models/props_lab/huladoll.mdl\") = weapon_ttt_wtester : \"DNA Scanner\" []\n@PointClass base(Weapon) studio(\"models/weapons/w_defuser.mdl\") = weapon_ttt_defuser : \"Defuser\" []\n\n@SolidClass base(Trigger, Targetname) iconsprite(\"editor/obsolete.vmt\") = ttt_traitor_check :\n\t\"A trigger volume that checks if there is a traitor inside.\"\n[\n\tinput CheckForTraitor(void) : \"Performs a traitor test and will fire TraitorsFound output\"\n\t\n\toutput TraitorsFound(integer) : \"Fires when CheckForTraitor input was received. Parameter will be the number of traitors in the volume.\"\n]\n\n@SolidClass base(Trigger, Targetname) = ttt_weapon_check :\n\t\"A trigger volume that checks if a player with a certain weapon or weapon type is inside.\"\n[\n\tinput CheckForType(integer) : \"Performs a weapon test and will fire WeaponsFound output. If parameter is 1: will check for any primary weapon. If parameter is 2: will check for secondary weapon. If parameter is 3: will check for traitor equipment. If parameter is 4: will check for grenades. If parameter is 5: will check for any weapon players do not spawn with.\"\n\tinput CheckForClass(string) : \"Performs a weapon test and will fire WeaponsFound output. Parameter is a string: the entity name of the weapon to look for, eg. weapon_zm_shotgun. Only that weapon will be tested for.\"\n\t\n\toutput WeaponsFound(integer) : \"Fires when CheckForWeapons input was received. Parameter is 0 if no player with the requested weapon (type) is found, else it is 1.\"\n]\n\n@PointClass base(PlayerClass, Angles) studio(\"models/editor/playerstart.mdl\") = info_player_deathmatch :\n\t\"This entity indicates the position and facing direction at which the player will spawn during a deathmatch map. Any number of \"+\n\t\"info_player_deathmatch entities may be placed in a map.\"\n[\n]\n\n@PointClass base(Targetname, Parentname, Origin, Angles) = ttt_win :\n\t\"Point ent allowing map to trigger a victory for traitors or innocent.\"\n[\n\tinput TraitorWin(void) : \"Traitors win the round.\"\n\tinput InnocentWin(void) : \"Innocent terrorists win the round.\"\n\n]\n\n@PointClass base(Targetname, Origin, Angles) = ttt_map_settings :\n\t\"Point ent allowing map to specify some behaviors, such as whether crowbars unlock things.\"\n[\n\tcbar_doors(choices) : \"Crowbar unlocks doors\" : 1 : \"Enable crowbar unlocking func_door and func_door_rotating entities that have a targetname set, using an Unlock input.\" =\n\t[\n\t\t0 : \"No\"\n\t\t1 : \"Yes\"\n\t] \n\n\tcbar_buttons(choices) : \"Crowbar unlocks buttons\" : 1  : \"Enable crowbar unlocking func_button entities that have a targetname set, using an Unlock input.\" =\n\t[\n\t\t0 : \"No\"\n\t\t1 : \"Yes\"\n\t]\n\t\n\tcbar_other(choices) : \"Crowbar opens func_movelinear\" : 1 : \"Enable crowbar opening func_movelinear entities that have a targetname set, using an Open input.\" =\n\t[\n\t\t0 : \"No\"\n\t\t1 : \"Yes\"\n\t] \n\t\n\tplymodel(string) : \"Force player model\" : \"\" : \"Sets playermodels. Should look like 'models/player/phoenix.mdl'. Set to empty for random.\"\n\n\tpropspec_allow_named(choices) : \"Spectators can possess props that have a targetname set\" : 0 : \"Allow spectators to 'possess' named props that might be involved in map logic.\" = \n\t[\n\t\t0 : \"No\"\n\t\t1 : \"Yes\"\n\t] \n\n\n\tinput SetPlayerModels(string) : \"Sets playermodel to use to the given model path. Because entities are spawned before players, you can use this to set a random playermodel using logic entities.\"\n\n\toutput MapSettingsSpawned(void) : \"Fires when this entity spawns.\"\n\toutput RoundPreparation(void) : \"Fires when the Preparation phase of a round starts.\"\n\toutput RoundStart(void) : \"Fires when a round begins, meaning traitors have been selected.\"\n\toutput RoundEnd(integer) : \"Fires when a round has ended. The type of win/loss is a parameter of the output: 2 = traitors win, 3 = innocent win, 4 = timelimit.\"\n]\n\n@PointClass base(Targetname, Origin, Angles) = ttt_logic_role :\n\t\"Point ent a bit like a combination of a filter and a logic ent (because it is currently not possible to write proper filters in Lua). Tests if !activator is a certain role (detective/traitor/innocent/any) and fires output OnPass if true, or OnFail if not.\"\n[\n\tRole(choices) : \"Player role to test for\" : 1 : \"Specifies what role the !activator of TestActivator should be for this entity to fire the OnPass output.\" =\n\t[\n\t\t0 : \"Innocent\"\n\t\t1 : \"Traitor\"\n\t\t2 : \"Detective\"\n\t\t3 : \"Any role\"\n\t] \n\n\t// Inputs\n\tinput TestActivator(void) : \"Test the activator for the given Role (ie. if it's a traitor/detective/etc) and fires OnPass or OnFail output. If activator is not a valid player it will always fail.\"\n\n\t// Outputs\n\toutput OnPass(void) : \"Fired in response to TestActivator input if the activator player is of the role set in this ent.\"\n\toutput OnFail(void) : \"Fired in response to TestActivator input if the activator player is NOT of the role set in this ent.\"\n]\n\n\n@PointClass base(Targetname) iconsprite(\"editor/game_text.vmt\") = ttt_game_text : \n\t\"An entity that displays a message in the top right message area.\"\n[\n\treceive(choices) : \"Players that should receive the message\" : 0 : \"Specifies what player or group of players should receive this message.\" =\n\t[\n\t\t0 : \"Activator only\"\n\t\t1 : \"All players\"\n\t\t2 : \"Detectives only\"\n\t\t3 : \"Traitors only\"\n\t\t4 : \"All except traitors\"\n\t] \n\n\tmessage(string) : \"Message Text\" : \"\" : \"Message to display in the top right.\"\n\n\tcolor(color255) : \"Color\" : \"255 255 0\"\n\n\t// Inputs\n\tinput Display(void) : \"Display the message text.\"\n]\n\n@PointClass base(Targetname, Parentname, Origin) sphere(UsableRange) = ttt_traitor_button :\n\t\"A button only usable by traitors, and only shown on their HUD. Can be used from any point within 1024 units of the button.\"\n[\n\tdescription(string) : \"Description\" : \"\" : \"Text describing the function of this button, shown on player HUD.\"\n\n\twait(integer) : \"Delay Before Reset\" : 0 : \"Amount of time in seconds, after the button has been used, before it can be used again. If the value is negative it will be single-use (same as Remove On Press).\"\n\t\n\tRemoveOnPress(choices) : \"Remove On Press\" : 0 : \"Button is single-use: removed after the first time it is pressed.\" =\n\t[\n\t\t0 : \"No\"\n\t\t1 : \"Yes\"\n\t]\n\n    UsableRange(integer) : \"Usable Range\": 1024 : \"Range in number of units at which a traitor will be able to see and use the button. Default is 1024 units (which was the range of all buttons before it was made configurable here).\"\n\n\tinput Lock(void) : \"Lock and hide the button, preventing it from being used.\"\n\tinput Unlock(void) : \"Unlock the button, showing it to players and allowing it to function.\"\n\t\n\toutput OnPressed(void) : \"Fired when the button is pressed.\"\n\t\n\tspawnflags(flags) =\n\t[\n\t\t2048: \"Starts locked\" : 0\n\t]\n]\n\n@PointClass base(Targetname, Origin) = ttt_damageowner :\n\t\"Used to specify that a player is responsible for the damage dealt and kills made by a given entity, like a trigger_hurt.\"\n[\n\tdamager(string) : \"Target entity\" : \"\" : \"Name of the entity for which we will specify the damage owner and round report name\"\n\n\tkillname(string) : \"Target entity's name in round report\" : \"\" : \"Name of the target entity in the Round Report event log, ie. 'Bob was killed by Joe using <name>'. Should be short, like 'the gas trap' or 'a boulder'. This name takes effect the first time the SetActivatorAsDamageOwner input is fired.\"\n\n\tinput SetActivatorAsDamageOwner(void) : \"The !activator of this input will be set as the damage owner for our target entity, meaning the damage the entity deals is attributed to that player (for points, karma, round report).\"\n\tinput ClearDamageOwner(void) : \"Clears out the damage owner for the target entity.\"\n]\n\n@PointClass base(Targetname, Origin) = ttt_credit_adjust :\n\t\"Give or take credits to the !activator.\"\n[\n\tcredits(integer) : \"Credits\" : 0 : \"Number of credits to take. Set this to a negative number to give credits.\"\n\n\t// Inputs\n\tinput TakeCredits(void) : \"Attempts to take the number of credits specified in this entity from the !activator. If the player does not have sufficient credits, the OnFail output is fired. Otherwise, OnSuccess is fired. Obviously when giving credits it never fails.\"\n\n\t// Outputs\n\toutput OnSuccess(void) : \"Fired in response to TakeCredits input if the activator player has successfully received or paid the credits.\"\n\toutput OnFail(void) : \"Fired in response to TakeCredits input if the activator player did not have sufficient credits.\"\n]\n\n@PointClass base(Targetname, Parentname, Origin, Angles) = ttt_spectator_spawn :\n\t\"Spectators will be moved here as soon as they stop viewing their ragdoll. If more than one of these exists, a random one is used. The angles of this entity determine the eye angles of the player, ie. where they are facing after being moved here.\"\n[\n\n]\n]]","Name":"fgd","ClassName":"Script","Parent":"0_12196","Disabled":true},"0_12183":{"Parent":"0_12182","ClassName":"Folder","Name":"gamemodes"},"0_12207":{"Parent":"0_12204","ClassName":"Folder","Name":"spawnmenu"},"0_12235":{"Parent":"0_12234","ClassName":"Folder","Name":"autorun"},"0_12213":{"Parent":"0_12212","ClassName":"Folder","Name":"gamemode"},"0_12218":{"Parent":"0_12217","ClassName":"Folder","Name":"entities"},"0_12220":{"Parent":"0_12219","ClassName":"Folder","Name":"gmod_tool"},"0_12202":{"Parent":"0_12201","ClassName":"Folder","Name":"duplicator"},"0_12515":{"Parent":"0_12434","ClassName":"SpecialMesh","MeshType":[null,"FileMesh"],"MeshId":"rbxassetid://6192398354","Scale":[120,120,120]},"0_12391":{"AssemblyCenterOfMass":[-866,-379,793],"AssemblyMass":null,"CenterOfMass":[-27,-2,-3],"SpecificGravity":2,"ClassName":"MeshPart","Parent":"0_12228","MeshSize":[1,0,1],"Name":"Meshes/Flatgrass_Brick","BrickColor":339,"Size":[174,40,174],"Position":[-839,-378,796],"Anchored":true,"Material":[null,"Brick"],"brickColor":339,"CollisionFidelity":[null,"Default"],"MeshId":"rbxassetid://6192398523","AssemblyRootPart":"0_12391","Color":[0,0,0],"Mass":897386,"CFrame":[-839,-378,796,1,0,0,0,1,0,0,0,1]},"0_12211":{"Parent":"0_12196","ClassName":"Folder","Name":"mapexpamples"},"0_12512":{"MoonAngularSize":0,"SunAngularSize":4,"SkyboxDn":"rbxassetid://6188155007","SkyboxLf":"rbxassetid://6188155007","ClassName":"Sky","Parent":"0_12225","SkyboxRt":"rbxassetid://6188155007","SkyboxBk":"rbxassetid://6188155007","SkyboxFt":"rbxassetid://6188155007","SkyboxUp":"rbxassetid://6188164614"},"0_12182":{"Parent":"0_4832","ClassName":"Folder","Name":"RobloxMod"},"0_12203":{"Parent":"0_12197","ClassName":"Folder","Name":"effects"},"0_12233":{"Parent":"0_12182","ClassName":"Folder","Name":"backgrounds"},"0_12190":{"Parent":"0_12189","ClassName":"Folder","Name":"entities"},"0_12172":{"Parent":"0_12184","ClassName":"Configuration","Name":"backgrounds"},"0_12226":{"Parent":"0_12225","ClassName":"Folder","Name":"nav"},"0_12173":{"Parent":"0_12196","ClassName":"Configuration","Name":"backgrounds"},"0_12397":{"Name":"cl_hints","ClassName":"ModuleScript","Parent":"0_12185","Source":"\n\nCreateClientConVar( \"cl_showhints\", \"1\", true, false )\n\n-- A list of hints we've already done so we don't repeat ourselves`\nlocal ProcessedHints = {}\n\n--\n-- Throw's a Hint to the screen\n--\nlocal function ThrowHint( name )\n\n\tlocal show = GetConVarNumber( \"cl_showhints\" )\n\tif ( show == 0 ) then return end\n\n\tif ( engine.IsPlayingDemo() ) then return end\n\n\tlocal text = language.GetPhrase( \"Hint_\" .. name )\n\n\tlocal s, e, group = string.find( text, \"%%([^%%]+)%%\" )\n\twhile ( s ) do\n\t\tlocal key = input.LookupBinding( group )\n\t\tif ( !key ) then key = \"<NOT BOUND>\" end\n\n\t\ttext = string.gsub( text, \"%%([^%%]+)%%\", \"'\" .. key:upper() .. \"'\" )\n\t\ts, e, group = string.find( text, \"%%([^%%]+)%%\" )\n\tend\n\n\tGAMEMODE:AddNotify( text, NOTIFY_HINT, 20 )\n\n\tsurface.PlaySound( \"ambient/water/drip\" .. math.random( 1, 4 ) .. \".wav\" )\n\nend\n\n\n--\n-- Adds a hint to the queue\n--\nfunction GM:AddHint( name, delay )\n\n\tif ( ProcessedHints[ name ] ) then return end\n\n\ttimer.Create( \"HintSystem_\" .. name, delay, 1, function() ThrowHint( name ) end )\n\tProcessedHints[ name ] = true\n\nend\n\n--\n-- Removes a hint from the queue\n--\nfunction GM:SuppressHint( name )\n\n\ttimer.Remove( \"HintSystem_\" .. name )\n\nend\n\n-- Show opening menu hint if they haven't opened the menu within 30 seconds\nGM:AddHint( \"OpeningMenu\", 30 )\n\n-- Tell them how to turn the hints off after 1 minute\nGM:AddHint( \"Annoy1\", 5 )\nGM:AddHint( \"Annoy2\", 7 )\n"},"0_12176":{"Parent":"0_12233","ClassName":"Configuration","Name":"tmp_alex_gem_our_small_fleet"},"0_12516":{"Parent":"0_12435","ClassName":"SpecialMesh","MeshType":[null,"FileMesh"],"MeshId":"rbxassetid://6192461670","Scale":[6000,0,6000]},"0_12361":{"Value":6182528337,"Parent":"0_12175","ClassName":"IntValue","Name":"0.1."},"0_12205":{"Parent":"0_12204","ClassName":"Folder","Name":"gui"},"0_12217":{"Parent":"0_12212","ClassName":"Folder","Name":"entities"},"0_12400":{"Name":"cl_search_models","ClassName":"ModuleScript","Parent":"0_12185","Source":"\nlocal sbox_search_maxresults = CreateClientConVar( \"sbox_search_maxresults\", \"1024\", true, false, \"The maximum amount of results the spawnmenu search should show. Model amount limited to 1/2 of this value, entities are limited to 1/4\", 1024 )\n\nlocal totalCalls = 0\nlocal expectedCalls = 1\n\nlocal queuedSearch = {}\n\nlocal function GetAllFiles( tab, folder, extension, path )\n\n\ttotalCalls = totalCalls + 1\n\n\tlocal files, folders = file.Find( folder .. \"*\", path )\n\n\tif ( !files ) then\n\t\tMsgN( \"Warning! Ignoring '\" .. folder .. \"' because we cannot search in it!\" )\n\t\treturn\n\tend\n\n\tfor k, v in pairs( files ) do\n\n\t\tif ( v:EndsWith( extension ) ) then\n\t\t\ttable.insert( tab, ( folder .. v ):lower() )\n\t\tend\n\n\tend\n\n\tfor k, v in pairs( folders ) do\n\t\texpectedCalls = expectedCalls + 1\n\t\ttable.insert( queuedSearch, { tab, folder .. v .. \"/\", extension, path } )\n\tend\n\n\tnotification.AddProgress( \"SandboxSearchIndexing\", \"#spawnmenu.searchindex\", totalCalls / expectedCalls )\n\tif ( totalCalls >= expectedCalls ) then notification.Kill( \"SandboxSearchIndexing\" ) end\n\nend\n\nhook.Add( \"Think\", \"sandbox_queued_search\", function()\n\n\tif ( #queuedSearch < 1 ) then return end\n\n\tlocal call = queuedSearch[ 1 ]\n\tGetAllFiles( unpack( call ) )\n\ttable.remove( queuedSearch, 1 )\n\n\tif ( !timer.Exists( \"search_models_update\" ) || #queuedSearch < 1 ) then\n\t\ttimer.Create( \"search_models_update\", 1, 1, function() hook.Run( \"SearchUpdate\" ) end )\n\tend\n\nend )\n\n--\n-- Model Search\n--\nlocal model_list = nil\nsearch.AddProvider( function( str )\n\n\tif ( model_list == nil ) then\n\n\t\tmodel_list = {}\n\t\tGetAllFiles( model_list, \"models/\", \".mdl\", \"GAME\" )\n\n\tend\n\n\tlocal models = {}\n\n\tfor k, v in pairs( model_list ) do\n\n\t\t-- Don't search in the models/ and .mdl bit of every model, because every model has this bit, unless they are looking for direct model path\n\t\tlocal modelpath = v\n\t\tif ( modelpath:StartWith( \"models/\" ) && modelpath:EndsWith( \".mdl\" ) && !str:EndsWith( \".mdl\" ) ) then modelpath = modelpath:sub( 8, modelpath:len() - 4 ) end\n\n\t\tif ( modelpath:find( str, nil, true ) ) then\n\n\t\t\tif ( IsUselessModel( v ) ) then continue end\n\n\t\t\tlocal entry = {\n\t\t\t\ttext = v:GetFileFromFilename(),\n\t\t\t\tfunc = function() RunConsoleCommand( \"gm_spawn\", v ) end,\n\t\t\t\ticon = spawnmenu.CreateContentIcon( \"model\", g_SpawnMenu.SearchPropPanel, { model = v } ),\n\t\t\t\twords = { v }\n\t\t\t}\n\n\t\t\ttable.insert( models, entry )\n\n\t\tend\n\n\t\tif ( #models >= sbox_search_maxresults:GetInt() / 2 ) then break end\n\n\tend\n\n\treturn models\n\nend, \"props\" )\n\n--\n-- Entity, vehicles\n--\nlocal function AddSearchProvider( listname, ctype, stype )\n\tsearch.AddProvider( function( str )\n\n\t\tlocal results = {}\n\t\tlocal entities = {}\n\n\t\tfor k, v in pairs( list.Get( listname ) ) do\n\t\t\tif ( listname == \"Weapon\" && !v.Spawnable ) then continue end\n\t\t\tv.ClassName = k\n\t\t\tv.PrintName = v.PrintName or v.Name\n\t\t\tv.ScriptedEntityType = ctype\n\t\t\ttable.insert( entities, v )\n\t\tend\n\n\t\tfor k, v in pairs( entities ) do\n\n\t\t\tlocal name = v.PrintName\n\t\t\tlocal name_c = v.ClassName\n\t\t\tif ( !name && !name_c ) then continue end\n\n\t\t\tif ( ( name && name:lower():find( str, nil, true ) ) || ( name_c && name_c:lower():find( str, nil, true ) ) ) then\n\n\t\t\t\tlocal entry = {\n\t\t\t\t\ttext = v.PrintName or v.ClassName,\n\t\t\t\t\ticon = spawnmenu.CreateContentIcon( v.ScriptedEntityType or \"entity\", nil, {\n\t\t\t\t\t\tnicename = v.PrintName or v.ClassName,\n\t\t\t\t\t\tspawnname = v.ClassName,\n\t\t\t\t\t\tmaterial = \"entities/\" .. v.ClassName .. \".png\",\n\n\t\t\t\t\t\tadmin = v.AdminOnly\n\t\t\t\t\t} ),\n\t\t\t\t\twords = { v }\n\t\t\t\t}\n\n\t\t\t\ttable.insert( results, entry )\n\n\t\t\tend\n\n\t\t\tif ( #results >= sbox_search_maxresults:GetInt() / 4 ) then break end\n\n\t\tend\n\n\t\ttable.SortByMember( results, \"text\", true )\n\t\treturn results\n\n\tend, stype )\nend\n\nAddSearchProvider( \"SpawnableEntities\", \"entity\", \"entities\" )\nAddSearchProvider( \"Vehicles\", \"vehicle\", \"vehicles\" )\nAddSearchProvider( \"NPC\", \"npc\", \"npcs\" )\nAddSearchProvider( \"Weapon\", \"weapon\", \"weapons\" )\n"}}